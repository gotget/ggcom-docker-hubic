#!/usr/bin/env bash
: <<'!COMMENT'

GGCOM - Docker - hubiC v201508081051
Louis T. Getterman IV (@LTGIV)
www.GotGetLLC.com | www.opensour.cc/ggcom/docker/hubic

Thanks:

bash - Delete all comments in a file using sed - Stack Overflow
http://stackoverflow.com/a/13548744

!COMMENT

################################################################################

# Arguments
argPassed="$@"

# Detached
detached=false
argBulk='--cap-add SYS_ADMIN --device /dev/fuse --interactive --tty'
case "$1" in
	d|detach|detached)
		argBulk="${argBulk} --detach"
		detached=true
		argPassedN="${argPassed[@]:1}"
		argPassed="$argPassedN"
		unset argPassedN
		;;
esac

# Clear screen
clear

# Requirements
hash screen 2>/dev/null || { echo >&2 "'GGCom - Docker - hubiC - container tools' requires GNU screen.  Please install, and try again."; exit 1; }

# Functions
function pauseRet () { prompt="$1"; if [ -z "$prompt" ]; then prompt='Press any key to continue...'; fi; read -n 1 -p "$prompt"; echo; }

# Temporary files for redirecting streams
tmpOut=`mktemp 2>/dev/null || mktemp -t 'hubic'`
tmpErr=`mktemp 2>/dev/null || mktemp -t 'hubic'`

# Program Commands
cmdClean="( docker rm $( docker ps --all --quiet --no-trunc --filter 'name=hubic' --filter 'status=exited' ) >/dev/null 2>&1 )"

# Read list of volumes, concatenate, and attempt to mount
if [ ! -f "$HOME/ggcom/config/ggcom-docker-hubic/volumes.txt" ]; then
	echo >&2 "Error: '$HOME/ggcom/config/ggcom-docker-hubic/volumes.txt' does not exist."
	exit 1
fi
tmpVolumes=`mktemp 2>/dev/null || mktemp -t 'hubic'`
cp "$HOME/ggcom/config/ggcom-docker-hubic/volumes.txt" "$tmpVolumes"
sed -e 's/^[ \t]*#[^!].*$//g' -e 's/[ \t]#.*$//g' "$tmpVolumes" >/dev/null
argVolumes=""
while IFS='' read -r line || [[ -n "$line" ]]; do
	line=`eval echo "$line"`
	if [ -z "$line" ]; then continue; fi
	argVolumes="${argVolumes}--volume=\"$line\" "
done < "$tmpVolumes"
argVolumes="$(echo -e "${argVolumes}" | sed -e 's/[[:space:]]*$//')"
rm "$tmpVolumes"
unset tmpVolumes

# Docker
cmdDocker="( ( docker run --name='hubic' $argBulk $argVolumes hubic \"$argPassed\" ) 2>"$tmpErr" )"

# Screen
cmdScreen="screen -S hubic bash -c 'echo -e \"HubiC docker container is running within a screen.\n----------\nExit                   : [CTRL]+[D]\nSwitch to background   : [CTRL]+[A]+[D]\nResume hubiC container : screen -r hubic\n----------\"; $cmdDocker';"

################################################################################

# Clear stale instances
eval "$cmdClean"

# Check for active instance
( ( docker ps --all --quiet --no-trunc --filter 'name=hubic' --filter 'status=running' ) 1>"$tmpOut" 2>"$tmpErr" )
opActOut=`cat "$tmpOut" | tr -d '[[:space:]]'`
opActErr=`cat "$tmpErr" | tr -d '[[:space:]]'`

# Running or not?
if [ -z "$opActOut" ]; then
	if [ $detached == true ]; then
		echo "Launching hubiC docker container in the background.  You can attach to it by typing 'hubic'."
		eval "$cmdDocker" >/dev/null
	else
		eval "$cmdScreen"
	fi
else
	echo >&2 "\
hubiC docker container is already running.
"

	# Check for running screen instance
	screen -S hubic -X select . >/dev/null 2>&1;
	if [ $? -eq 0 ]; then
		screen -d -r hubic
	else
		echo >&2 "\
Please note: hubiC docker container appears to have been initially launched in the background,
but can be re-attached by pressing any key, and will now be inserted into a screen session for a more
easy way to resume.

Since we're now attaching, if no prompts show up, try pressing a key, or refresh screen with [CTRL]+[L].

Important: The only way to clear other Docker-attached instances to this container is by exiting the container.
(You will not encounter this problem if you're normally using GGCom's "hubiC container tools".)
"
	pauseRet
	screen -S hubic bash -c 'docker attach $(docker ps --quiet --no-trunc --filter 'name=hubic')'
	fi
	exit 1
fi

################################################################################

# Clear out if it's not running
eval "$cmdClean"

# Remove temporary files
rm -rf "$tmpOut" "$tmpErr"
